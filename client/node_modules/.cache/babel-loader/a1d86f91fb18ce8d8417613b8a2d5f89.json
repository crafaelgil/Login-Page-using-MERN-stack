{"ast":null,"code":"var _jsxFileName = \"/Users/carlosgil/Developer/Basic LogIn Page/client/src/components/Register.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { isEmail } from 'validator';\nimport AuthService from '../services/auth.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this);\n  }\n};\n\nconst email = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The username must be between 3 and 20 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The password must be between 6 and 40 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vpassword = value => {\n  if (!value) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this);\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.CheckBtn.context._errors.length === 0) {\n      AuthService.register(this.state.username, this.state.email, this.state.password).then(response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          message: resMessage,\n          successful: false\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n          alt: \"profile-img\",\n          className: \"profile-img-card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleRegister,\n          ref: c => {\n            this.form = c;\n          },\n          children: [!this.state.successful && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"username\",\n                value: this.state.username,\n                onChange: this.onChangeUsername,\n                validations: [required, vusername]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"email\",\n                value: this.state.email,\n                onChange: this.onChangeEmail,\n                validations: [required, email]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"password\",\n                value: this.state.password,\n                onChange: this.onChangePassword,\n                validations: [required, vpassword]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary btn-block\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n              role: \"alert\",\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n            style: {\n              display: \"none\"\n            },\n            ref: c => {\n              this.checkBtn = c;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/carlosgil/Developer/Basic LogIn Page/client/src/components/Register.js"],"names":["React","Component","Form","Input","CheckButton","isEmail","AuthService","required","value","email","length","vusername","vpassword","Register","constructor","props","handleRegister","bind","onChangeEmail","onChangeUsername","onChangePassword","state","username","password","successful","message","e","setState","target","preventDefault","form","validateAll","CheckBtn","context","_errors","register","then","response","data","error","resMessage","toString","render","c","display","checkBtn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport  { isEmail } from 'validator';\n\nimport AuthService from '../services/auth.service';\n\nconst required = value => {\n  if(!value) {\n    <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n  }\n}\n\nconst email = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n}\n\nconst vusername = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n}\n\nconst vpassword = value => {\n  if(!value) {\n    <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n  }\n}\n\nexport default class Register extends Component {\n  constructor(props){\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      successful: false,\n      message: \"\"\n    }\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }  \n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if(this.CheckBtn.context._errors.length === 0) {\n      AuthService\n        .register(this.state.username, this.state.email, this.state.password)\n        .then(response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        }, error => {\n          const resMessage = (error.response && error.response.data && error.response.data.message)\n                              || error.message\n                              || error.toString();\n          this.setState({\n            message: resMessage,\n            successful: false\n          });\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}